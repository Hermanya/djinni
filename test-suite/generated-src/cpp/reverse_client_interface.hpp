// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client_interface.djinni

#pragma once

#include "../../handwritten-src/cpp/optional.hpp"
#include <cstdint>
#include <memory>
#include <string>

namespace testsuite {

struct ClientReturnedRecord;

class ReverseClientInterface {
public:
    virtual ~ReverseClientInterface() {}

    virtual std::string return_str() const = 0;

    virtual std::string meth_taking_interface(const std::shared_ptr<ReverseClientInterface> & i) = 0;

    virtual std::string meth_taking_optional_interface(const std::shared_ptr<ReverseClientInterface> & i) = 0;

    static std::shared_ptr<ReverseClientInterface> create();

    virtual void take_lambda_which_returns_nothing(std::function<void(int64_t)> cb) = 0;

    virtual void take_lambda_which_returns_string(std::function<std::string(int64_t)> cb) = 0;

    virtual void take_binary_lambda_which_returns_nothing(std::function<void(int64_t, std::string)> cb) = 0;

    virtual void get_record(int64_t record_id, const std::function<void(ClientReturnedRecord)> & completionCallback) = 0;
};

}  // namespace testsuite
