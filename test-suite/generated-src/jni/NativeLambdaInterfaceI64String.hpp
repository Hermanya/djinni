// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from 

#pragma once

#include "djinni_support.hpp"
#include "lambda_interface_i64_string.hpp"

namespace djinni_generated {

class NativeLambdaInterfaceI64String final : ::djinni::JniInterface<::testsuite::LambdaInterfaceI64String, NativeLambdaInterfaceI64String> {
public:
    using CppType = std::shared_ptr<::testsuite::LambdaInterfaceI64String>;
    using CppOptType = std::shared_ptr<::testsuite::LambdaInterfaceI64String>;
    using JniType = jobject;

    using Boxed = NativeLambdaInterfaceI64String;

    ~NativeLambdaInterfaceI64String();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeLambdaInterfaceI64String>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeLambdaInterfaceI64String>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeLambdaInterfaceI64String();
    friend ::djinni::JniClass<NativeLambdaInterfaceI64String>;
    friend ::djinni::JniInterface<::testsuite::LambdaInterfaceI64String, NativeLambdaInterfaceI64String>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::testsuite::LambdaInterfaceI64String
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        std::string run(int64_t param_1) override;

    private:
        friend ::djinni::JniInterface<::testsuite::LambdaInterfaceI64String, ::djinni_generated::NativeLambdaInterfaceI64String>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/djinni/test/LambdaInterfaceI64String") };
    const jmethodID method_run { ::djinni::jniGetMethodID(clazz.get(), "run", "(J)Ljava/lang/String;") };
};

}  // namespace djinni_generated
