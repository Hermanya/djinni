// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from 

#include "NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid.hpp"  // my header
#include "Marshal.hpp"
#include "NativeClientReturnedRecord.hpp"

namespace djinni_generated {

NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid::NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid() : ::djinni::JniInterface<::testsuite::LambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid, NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid>() {}

NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid::~NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid() = default;

NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid::JavaProxy::~JavaProxy() = default;

void NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid::JavaProxy::run(const std::experimental::optional<::testsuite::ClientReturnedRecord> & c_param_1, const std::unordered_map<std::string, std::string> & c_param_2) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLambdaInterfaceOptionalClientReturnedRecordMapStringStringVoid>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_run,
                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni_generated::NativeClientReturnedRecord>::fromCpp(jniEnv, c_param_1)),
                           ::djinni::get(::djinni::Map<::djinni::String, ::djinni::String>::fromCpp(jniEnv, c_param_2)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
