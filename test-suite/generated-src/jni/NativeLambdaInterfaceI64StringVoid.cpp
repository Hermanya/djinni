// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from 

#include "NativeLambdaInterfaceI64StringVoid.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeLambdaInterfaceI64StringVoid::NativeLambdaInterfaceI64StringVoid() : ::djinni::JniInterface<::testsuite::LambdaInterfaceI64StringVoid, NativeLambdaInterfaceI64StringVoid>() {}

NativeLambdaInterfaceI64StringVoid::~NativeLambdaInterfaceI64StringVoid() = default;

NativeLambdaInterfaceI64StringVoid::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLambdaInterfaceI64StringVoid::JavaProxy::~JavaProxy() = default;

void NativeLambdaInterfaceI64StringVoid::JavaProxy::run(int64_t c_param_1, const std::string & c_param_2) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLambdaInterfaceI64StringVoid>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_run,
                           ::djinni::get(::djinni::I64::fromCpp(jniEnv, c_param_1)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_param_2)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
