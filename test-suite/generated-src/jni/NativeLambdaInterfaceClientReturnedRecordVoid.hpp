// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from 

#pragma once

#include "djinni_support.hpp"
#include "lambda_interface_client_returned_record_void.hpp"

namespace djinni_generated {

class NativeLambdaInterfaceClientReturnedRecordVoid final : ::djinni::JniInterface<::testsuite::LambdaInterfaceClientReturnedRecordVoid, NativeLambdaInterfaceClientReturnedRecordVoid> {
public:
    using CppType = std::shared_ptr<::testsuite::LambdaInterfaceClientReturnedRecordVoid>;
    using CppOptType = std::shared_ptr<::testsuite::LambdaInterfaceClientReturnedRecordVoid>;
    using JniType = jobject;

    using Boxed = NativeLambdaInterfaceClientReturnedRecordVoid;

    ~NativeLambdaInterfaceClientReturnedRecordVoid();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeLambdaInterfaceClientReturnedRecordVoid>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeLambdaInterfaceClientReturnedRecordVoid>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeLambdaInterfaceClientReturnedRecordVoid();
    friend ::djinni::JniClass<NativeLambdaInterfaceClientReturnedRecordVoid>;
    friend ::djinni::JniInterface<::testsuite::LambdaInterfaceClientReturnedRecordVoid, NativeLambdaInterfaceClientReturnedRecordVoid>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::testsuite::LambdaInterfaceClientReturnedRecordVoid
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void run(const ::testsuite::ClientReturnedRecord & param_1) override;

    private:
        friend ::djinni::JniInterface<::testsuite::LambdaInterfaceClientReturnedRecordVoid, ::djinni_generated::NativeLambdaInterfaceClientReturnedRecordVoid>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/dropbox/djinni/test/LambdaInterfaceClientReturnedRecordVoid") };
    const jmethodID method_run { ::djinni::jniGetMethodID(clazz.get(), "run", "(Lcom/dropbox/djinni/test/ClientReturnedRecord;)V") };
};

}  // namespace djinni_generated
